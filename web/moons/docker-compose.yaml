version: '0.1'

services:
  web:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: django_celery
    command: /start
    volumes:
      - ./server//:/app
    ports:
      - 9000:8000
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3
    ports:
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10

  # redis:
  #   image: redis:7-alpine
  #   healthcheck:
  #     test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: django_celery_example_celery_worker
    command: /start-celeryworker
    volumes:
      - ./server/:/app
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  celery_beat:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: django_celery_example_celery_beat
    command: /start-celerybeat
    volumes:
      - ./server/:/app
    env_file:
      - ./.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  # flower:
  #   build:
  #     context: .
  #     dockerfile: ./docker/local/django/Dockerfile
  #   image: django_celery_example_celery_flower
  #   command: /start-flower
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - ./.env
  #   ports:
  #     - 5555:5555
  #   depends_on:
  #     - redis
  #     - db

volumes:
  postgres_data: